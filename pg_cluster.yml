---
- name: Provision PostgreSQL Master and Replica with Replication
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Create Master VM
      ansible.builtin.command:
        cmd: >
          gcloud compute instances create pg-master 
          --project=saip-poc-0106 
          --zone=me-central2-a 
          --machine-type=e2-medium 
          --image=projects/ubuntu-os-cloud/global/images/ubuntu-minimal-2404-noble-amd64-v20250624 
          --network=saip-vpc 
          --subnet=saip-subnet 
          --tags=postgres 
          --boot-disk-auto-delete 
          --quiet
      register: create_master
      changed_when: true
      failed_when: false

    - name: Create Replica VM
      ansible.builtin.command:
        cmd: >
          gcloud compute instances create pg-replica 
          --project=saip-poc-0106 
          --zone=me-central2-a 
          --machine-type=e2-medium 
          --image=projects/ubuntu-os-cloud/global/images/ubuntu-minimal-2404-noble-amd64-v20250624 
          --network=saip-vpc 
          --subnet=saip-subnet 
          --tags=postgres 
          --boot-disk-auto-delete 
          --quiet
      register: create_replica
      changed_when: true
      failed_when: false

- name: Wait for SSH to be ready
  hosts: all
  gather_facts: no
  tasks:
    - name: Wait for SSH
      ansible.builtin.wait_for:
        port: 22
        host: "{{ inventory_hostname }}"
        timeout: 300

- name: Configure PostgreSQL Master
  hosts: pg-master
  become: yes
  vars:
    pg_version: "16"
    pg_conf_path: "/etc/postgresql/{{ pg_version }}/main"
  tasks:
    - name: Update apt
      ansible.builtin.apt:
        update_cache: yes

    - name: Install PostgreSQL
      ansible.builtin.apt:
        name: "postgresql"
        state: present

    - name: Set password for postgres user
      ansible.builtin.shell: sudo -u postgres psql -c "ALTER USER postgres WITH PASSWORD 'postgres';"

    - name: Configure postgresql.conf
      ansible.builtin.lineinfile:
        path: "{{ pg_conf_path }}/postgresql.conf"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      loop:
        - { regexp: '^#?listen_addresses', line: "listen_addresses = '*'" }
        - { regexp: '^#?wal_level', line: 'wal_level = replica' }
        - { regexp: '^#?max_wal_senders', line: 'max_wal_senders = 3' }
        - { regexp: '^#?wal_keep_size', line: 'wal_keep_size = 64' }

    - name: Configure pg_hba.conf to allow replication
      ansible.builtin.blockinfile:
        path: "{{ pg_conf_path }}/pg_hba.conf"
        block: |
          host    replication     all             10.10.0.0/16            md5

    - name: Restart PostgreSQL
      ansible.builtin.service:
        name: postgresql
        state: restarted

- name: Configure PostgreSQL Replica
  hosts: pg-replica
  become: yes
  vars:
    pg_version: "16"
    pg_conf_path: "/etc/postgresql/{{ pg_version }}/main"
  tasks:
    - name: Install required dependencies
      ansible.builtin.apt:
        name:
          - wget
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Add PostgreSQL APT repository
      ansible.builtin.shell: |
        echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list

    - name: Import PostgreSQL signing key
      ansible.builtin.apt_key:
        url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
        state: present

    - name: Update apt cache after adding PostgreSQL repo
      ansible.builtin.apt:
        update_cache: yes

    - name: Install PostgreSQL 16 server and client
      ansible.builtin.apt:
        name:
          - postgresql-16
          - postgresql-client-16
        state: present

    - name: Stop PostgreSQL service
      ansible.builtin.service:
        name: postgresql
        state: stopped

    - name: Clear existing data directory
      ansible.builtin.shell: "rm -rf {{ pg_conf_path }}/../../main/*"

    - name: Perform base backup from master
      ansible.builtin.shell: |
        sudo -u postgres PGPASSWORD=postgres pg_basebackup \
          -h 10.10.0.67 \
          -U postgres \
          -D {{ pg_conf_path }}/../../main \
          -Fp -Xs -P -R
      environment:
        PGPASSWORD: postgres

    - name: Restart PostgreSQL on replica
      ansible.builtin.service:
        name: postgresql
        state: started

